[{"/Users/alex/Desktop/shop/online-shot/src/index.js":"1","/Users/alex/Desktop/shop/online-shot/src/App.js":"2","/Users/alex/Desktop/shop/online-shot/src/components/products/Products.js":"3","/Users/alex/Desktop/shop/online-shot/src/components/Products/Products.js":"4","/Users/alex/Desktop/shop/online-shot/src/components/Products/Product/Product.js":"5","/Users/alex/Desktop/shop/online-shot/src/components/Products/Product/styles.js":"6","/Users/alex/Desktop/shop/online-shot/src/components/index.js":"7","/Users/alex/Desktop/shop/online-shot/src/components/Navbar/Navbar.js":"8","/Users/alex/Desktop/shop/online-shot/src/components/Navbar/styles.js":"9","/Users/alex/Desktop/shop/online-shot/src/components/Products/styles.js":"10","/Users/alex/Desktop/shop/online-shot/src/lib/commerce.js":"11","/Users/alex/Desktop/shop/online-shot/src/components/Cart/Cart.js":"12","/Users/alex/Desktop/shop/online-shot/src/components/Cart/styles.js":"13","/Users/alex/Desktop/shop/online-shot/src/components/Cart/CartItem/CartItem.js":"14","/Users/alex/Desktop/shop/online-shot/src/components/Cart/CartItem/styles.js":"15","/Users/alex/Desktop/shop/online-shot/src/Context/ThemeContext.js":"16","/Users/alex/Desktop/shop/online-shot/src/Context/CartContext.js":"17","/Users/alex/Desktop/shop/online-shot/src/Context/CartUpdateContext.js":"18","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/Checkout/Checkout.js":"19","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/Checkout/styles.js":"20","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/AddressForm/AddressForm.js":"21","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/PaymentForm/PaymentForm.js":"22","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/TextField/TextField.js":"23","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/AddressForm/styles.js":"24","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/PaymentForm/Review/Review.js":"25"},{"size":221,"mtime":1609930019412,"results":"26","hashOfConfig":"27"},{"size":1052,"mtime":1610314915051,"results":"28","hashOfConfig":"27"},{"size":902,"mtime":1609933836317,"results":"29","hashOfConfig":"30"},{"size":740,"mtime":1610308105391,"results":"31","hashOfConfig":"27"},{"size":1499,"mtime":1610098032361,"results":"32","hashOfConfig":"27"},{"size":366,"mtime":1610313921816,"results":"33","hashOfConfig":"27"},{"size":149,"mtime":1609952833637,"results":"34","hashOfConfig":"27"},{"size":2174,"mtime":1610319159028,"results":"35","hashOfConfig":"27"},{"size":2003,"mtime":1610316231309,"results":"36","hashOfConfig":"27"},{"size":287,"mtime":1610314321575,"results":"37","hashOfConfig":"27"},{"size":125,"mtime":1609938964984,"results":"38","hashOfConfig":"27"},{"size":2653,"mtime":1610319455091,"results":"39","hashOfConfig":"27"},{"size":795,"mtime":1610318700492,"results":"40","hashOfConfig":"27"},{"size":1601,"mtime":1610321559532,"results":"41","hashOfConfig":"27"},{"size":554,"mtime":1610321582785,"results":"42","hashOfConfig":"27"},{"size":3384,"mtime":1610316363359,"results":"43","hashOfConfig":"27"},{"size":1276,"mtime":1610295468479,"results":"44","hashOfConfig":"27"},{"size":2124,"mtime":1610292442206,"results":"45","hashOfConfig":"27"},{"size":4138,"mtime":1610316674425,"results":"46","hashOfConfig":"27"},{"size":1158,"mtime":1610203394269,"results":"47","hashOfConfig":"27"},{"size":6229,"mtime":1610316470812,"results":"48","hashOfConfig":"27"},{"size":2946,"mtime":1610302587885,"results":"49","hashOfConfig":"27"},{"size":583,"mtime":1610294959806,"results":"50","hashOfConfig":"27"},{"size":309,"mtime":1610203477694,"results":"51","hashOfConfig":"27"},{"size":1101,"mtime":1610305140525,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1nhjq4v",{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yh2f22",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"55"},"/Users/alex/Desktop/shop/online-shot/src/index.js",[],["115","116"],"/Users/alex/Desktop/shop/online-shot/src/App.js",["117","118","119"],"import { Paper } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navbar, Products, Cart } from \"./components\";\nimport Checkout from \"./components/CheckoutForm/Checkout/Checkout\";\nimport CartProvider from \"./Context/CartContext\";\nimport CartUpdateContextProvider from \"./Context/CartUpdateContext\";\nimport DarkProvider from \"./Context/ThemeContext\";\n\nfunction App() {\n  return (\n    <Router>\n      <DarkProvider>\n        <CartProvider>\n\n          <Navbar />\n          \n          <Switch>\n            <Route exact path=\"/\">\n              <Products />\n            </Route>{\" \"}\n            <CartUpdateContextProvider>\n              <Route exact path=\"/cart\">\n                <Cart />\n              </Route>\n              <Route path=\"/checkout\">\n                <Checkout />\n              </Route>\n            </CartUpdateContextProvider>\n          </Switch>\n\n        </CartProvider>\n      </DarkProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/alex/Desktop/shop/online-shot/src/components/products/Products.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/Products/Products.js",["120"],"import { CssBaseline, Grid } from \"@material-ui/core\";\n\n\nimport React from \"react\";\nimport { useCartContext } from \"../../Context/CartContext\";\nimport Product from \"./Product/Product\";\n\nimport useStyles from './styles'\n\nconst Products = () => {\n\n  const classes =useStyles();\n\n  const [cart,products] =useCartContext()\n\n\n\n  return (\n    <>\n        <CssBaseline/>\n    <main className={classes.content} >\n    <div className={classes.toolbar} />\n      <Grid container justify=\"center\" spacing={4}>\n        {products.map((product) => (\n          <Grid item key={product.id}  xs={12} sm={6} md={4} lg={3}>\n          <Product product={product} />\n          </Grid>\n        ))}\n      </Grid>\n    </main>\n    </>\n  );\n\n};\n\nexport default Products;\n","/Users/alex/Desktop/shop/online-shot/src/components/Products/Product/Product.js",["121","122","123"],"import {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport AddShoppingCartRoundedIcon from \"@material-ui/icons/AddShoppingCartRounded\";\nimport React from \"react\";\nimport { useUpdateCartContext } from \"../../../Context/CartContext\";\n\nimport useStyles from \"./styles\";\n\nconst Product = ({ product }) => {\n  const classes = useStyles();\n\n  const [fetchProducts, fetchCart, handleAddToCart] = useUpdateCartContext();\n\n  return (\n    <Paper square elevation={3} className={classes.root}> {/*Card instead of Paper */}\n      <CardMedia\n        className={classes.media}\n        image={product.media.source}\n        title={product.name}\n      />\n      <CardContent>\n        <div className={classes.cardContent}>\n          <Typography variant=\"h5\" gutterBottom>\n            {product.name}\n          </Typography>\n          <Typography variant=\"h5\">\n            {product.price.formatted_with_symbol}\n          </Typography>\n        </div>\n        <Typography\n          dangerouslySetInnerHTML={{ __html: product.description }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        />\n      </CardContent>\n      <CardActions disableSpacing className={classes.cardActions}>\n        <IconButton\n          aria-label=\"Add to cart\"\n          onClick={() => handleAddToCart(product.id, 1)}\n        >\n          <AddShoppingCartRoundedIcon />\n        </IconButton>\n      </CardActions>\n    </Paper>\n  );\n};\n\nexport default Product;\n","/Users/alex/Desktop/shop/online-shot/src/components/Products/Product/styles.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/index.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/Navbar/Navbar.js",["124","125","126"],"import {\n  AppBar,\n  Badge,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\n\nimport React, { useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useCartContext } from \"../../Context/CartContext\";\n\nimport { useUpdateContext } from \"../../Context/ThemeContext\";\n\nimport DarkModeToggle from \"react-dark-mode-toggle\";\n\nimport useStyles from \"./styles\";\nimport './nav.css'\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [changeTheme, isThemeToggle] = useUpdateContext();\n\n  const [cart, products] = useCartContext();\n\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={isThemeToggle? classes.appBarDark : classes.appBar} color=\"inherit\">\n        <Toolbar>\n          <Typography\n            component={NavLink}\n            to=\"/\"\n            variant=\"h6\"\n            className={isThemeToggle?classes.titleDark : classes.title}\n            color=\"inherit\"\n          >\n            Breeab\n          </Typography>\n          <div className={classes.grow} />{\" \"}\n          {/* this div will take as much space as it need to fill the space between  Title and Buttons */}\n         \n\n    <div class=\"toggle-btn\" id=\"_1st-toggle-btn\">\n    <div onClick={changeTheme}>\n      <input type=\"checkbox\"/>\n      <span></span>\n      </div>\n    </div>\n\n\n          <div className={classes.button}>\n            {location.pathname === \"/\" && (\n              <NavLink to=\"/cart\">\n                <IconButton\n                  component={NavLink}\n                  to=\"/cart\"\n                  aria-label=\"Show cart items\"\n                  // color=\"inherit\"\n                >\n                  <Badge\n                    badgeContent={cart.total_items}\n                    color=\"secondary\"\n                  ></Badge>\n                  <ShoppingBasketIcon fontSize='large'  className={isThemeToggle ? classes.cartButtonDark : classes.cartButtonLight}/>\n                </IconButton>\n              </NavLink>\n            )}\n          </div>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default Navbar;\n","/Users/alex/Desktop/shop/online-shot/src/components/Navbar/styles.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/Products/styles.js",[],"/Users/alex/Desktop/shop/online-shot/src/lib/commerce.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/Cart/Cart.js",["127","128","129","130"],"import {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Divider,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useCartContext } from \"../../Context/CartContext\";\nimport CartUpdateContextProvider, {\n  useCartUpdateContext,\n} from \"../../Context/CartUpdateContext\";\nimport CartItem from \"./CartItem/CartItem\";\n\nimport useStyles from \"./styles\";\n\nconst Cart = () => {\n  const [cart, products, setCart] = useCartContext();\n  const [\n    handleUpdateCartQuantity,\n    handleRemoveFromCart,\n    handleEmptyCart,\n    handleCaptureCheckout,\n  ] = useCartUpdateContext();\n\n  const classes = useStyles();\n\n  const isEmpty = !cart.line_items;\n\n  const EmptyCart = () => (\n    <Typography variant=\"subtitle1\">\n      You have no items in your cart !{\" \"}\n      <Link to=\"/\" className={classes.link}>\n        Go to the main page\n      </Link>\n    </Typography>\n  );\n\n  const FilledCard = () => (\n    <div className={classes.content}>\n      <Box container spacing={3}>\n        {cart.line_items.map((item) => (\n          <Grid item xs={12} sm={12} key={item.id}>\n          <Divider/>\n\n            <CartItem\n              item={item}\n              onHandleAddCartQuantity={handleUpdateCartQuantity}\n              onHandleRemoveFromCart={handleRemoveFromCart}\n            />\n          </Grid>\n        ))}\n      </Box>\n      <div className={classes.cartDetails}>\n      <div className={classes.subtotalBreak}>\n        <Typography variant=\"h4\">\n          Subtotal : {cart.subtotal.formatted_with_symbol}\n        </Typography>\n        </div>\n        <div className={classes.btnBreak}>\n          <Button\n            className={classes.emptyButton}\n            size=\"large\"\n            type=\"button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleEmptyCart}\n          >\n            Empty cart\n          </Button>\n          <Button\n            component={NavLink}\n            to=\"/checkout\"\n            className={classes.checkoutButton}\n            size=\"large\"\n            type=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Checkout\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (!cart.line_items) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      <Container>\n        <div className={classes.toolbar} />\n        <Typography className={classes.title} variant=\"h4\" gutterBottom>\n          Your shopping cart\n        </Typography>\n        {isEmpty ? <EmptyCart /> : <FilledCard />}\n      </Container>\n    </>\n  );\n};\n\nexport default Cart;\n","/Users/alex/Desktop/shop/online-shot/src/components/Cart/styles.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/Cart/CartItem/CartItem.js",["131","132"],"import { Button, Card, CardActions, CardContent, CardMedia, Paper, Typography } from '@material-ui/core'\nimport React from 'react'\nimport useStyles from './styles'\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst CartItem = ({item,onHandleAddCartQuantity,onHandleRemoveFromCart}) => {\n\n   const classes = useStyles()\n\n    return (\n        <CardContent className={classes.itemWrapper} square elevation={2}>\n        <div>            <CardMedia image={item.media.source} alt={item.name} className={classes.media}/>\n</div>\n            {/* <div> */}\n            <CardContent className={classes.cardContent}>\n                <Typography variant='h4'>{item.name}</Typography>\n                <Typography variant='h5'>{item.line_total.formatted_with_symbol}</Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <div className={classes.buttons}>\n                    <Button type='button' size='small' onClick={()=>onHandleAddCartQuantity(item.id,item.quantity + 1)}><AddIcon/></Button>\n                    <Typography>{item.quantity}</Typography>\n                    <Button type='button' size='small' onClick={()=>onHandleAddCartQuantity(item.id,item.quantity - 1)}><RemoveIcon/></Button>\n                </div>\n                <Button className={classes.emptyButton} variant='contained' type='button' color='primary' onClick={()=>onHandleRemoveFromCart(item.id)} >Remove</Button>\n            </CardActions>\n            {/* </div> */}\n        </CardContent>\n    )\n}\n\nexport default CartItem\n","/Users/alex/Desktop/shop/online-shot/src/components/Cart/CartItem/styles.js",[],"/Users/alex/Desktop/shop/online-shot/src/Context/ThemeContext.js",["133"],"import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\n\nimport React, { createContext, useContext, useState } from \"react\";\n\nexport const ThemeContext = createContext();\nexport const ThemeUpdateContext = createContext();\n\nexport const useUpdateContext = () => {\n  return useContext(ThemeUpdateContext);\n};\n\nconst DarkProvider = ({ children }) => {\n  const [isThemeToggle, setIsThemeToggle] = useState(false);\n\n  const changeTheme = () => {\n    setIsThemeToggle((themeTrigger) => !themeTrigger);\n    console.log(\"theme changed\");\n  };\n\n  // const palette = {\n  // type: isThemeToggle ? 'dark' : 'light',\n\n  // dark: {\n  //   background: {\n  //     default: \"#000000\",\n  //   },\n  // },\n  // light: {\n  //   background: {\n  //     default: \"#ffffff\",\n  //   },\n\n  // },\n\n  //     type: theme.paletteType,\n  //     background: {\n  //       default: isThemeToggle ? '#000' : '#fff',\n  //     },\n\n  // };\n\n  // const theme = createMuiTheme({ palette });\n\n  const theme = createMuiTheme({\n    palette: {\n      type: isThemeToggle ? \"dark\" : \"light\",\n      primary: {\n        main: \"#fff\",\n      },\n      dark: {\n        background: {\n          default: \"#nnn\",\n        },\n        secondary: {\n          main: \"#fff\",\n        },\n      },\n      light: {\n        background: {\n          default: \"#ppp\",\n        },\n      },\n    },\n    // primary: {\n    //   main:  blueGrey[300],\n    // },\n    // secondary: {\n    //   main: '#f44336',\n    // },\n    primary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700],\n      background: blue,\n    },\n    secondary: {\n      light: lightGreen[300],\n      main: lightGreen[500],\n      dark: lightGreen[700],\n      background: blue,\n    },\n  });\n\n  // const theme = createMuiTheme({ palette });\n\n  // const theme = createMuiTheme({\n  //   palette: {\n  //     type:'dark',\n  //     // type:isThemeToggle ? 'dark' : 'light',\n  //     dark: {\n  //       background: {\n  //           default: \"#000000\"\n  //       }\n  //   },\n  //   light: {\n  //       background: {\n  //           default: \"#ffffff\"\n  //       }\n  //   }\n  // background:{\n  //   paper:lightGreen[700],\n  //   light: blueGrey[300],\n  //   dark: lightGreen[700],\n\n  // },\n\n  // primary: {\n  //   main:  blueGrey[300],\n  // },\n  // secondary: {\n  //   main: '#f44336',\n  // },\n  // primary: {\n  //   light: blueGrey[300],\n  //   main: blueGrey[500],\n  //   dark: blueGrey[700],\n  //   background: blue ,\n\n  // },\n  // secondary: {\n  //   light: lightGreen[300],\n  //   main: lightGreen[500],\n  //   dark: lightGreen[700],\n  //   background: blue ,\n\n  // },\n  // type: isThemeToggle ? \"dark\" : \"light\",\n  //   },\n  // });\n\n  return (\n    <ThemeContext.Provider value={isThemeToggle}>\n      {\" \"}\n      {/* PASS */}\n      <ThemeUpdateContext.Provider value={[changeTheme, isThemeToggle]}>\n        {\" \"}\n        {/* TOGGLE THEME CONTEXT*/}\n        <ThemeProvider theme={theme}>\n          {\" \"}\n          {/*MATERIAL UI THEME PROVIDER */}\n          {children}\n        </ThemeProvider>\n      </ThemeUpdateContext.Provider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default DarkProvider;\n","/Users/alex/Desktop/shop/online-shot/src/Context/CartContext.js",[],"/Users/alex/Desktop/shop/online-shot/src/Context/CartUpdateContext.js",["134","135"],"import React, { createContext, useContext, useState } from 'react'\nimport { commerce } from '../lib/commerce'\nimport { useCartContext } from './CartContext'\n\nconst CartUpdateContext = createContext()\nconst CartUpdateContextCheckout = createContext()\n\nexport const useCartUpdateContext = ()=>{\n    return useContext(CartUpdateContext)\n}\nexport const useCartUpdateContextCheckout = ()=>{\n    return useContext(CartUpdateContextCheckout)\n}\n\n\nconst CartUpdateContextProvider = ({children}) => {\n\n    const [cart, products,setCart] = useCartContext()\n    const [order ,setOrder] = useState({})\n    const [errorMsg,setErrorMsg] = useState('')\n\n    const handleUpdateCartQuantity =async (productId,quantity)=>{\n        const response = await commerce.cart.update(productId,{quantity})\n        setCart(response.cart)\n    }\n\n    const handleRemoveFromCart = async (productId)=>{\n        const response = await commerce.cart.remove(productId)\n        setCart(response.cart)\n    }\n\n    const handleEmptyCart = async ()=>{\n        const response = await commerce.cart.empty();\n\n        setCart(response.cart)\n    }\n\n    const refreshCart = async()=>{\n        const newCart = await commerce.cart.refresh()\n        setCart(newCart)\n    }\n\n    const handleCaptureCheckout = async (ckeckoutTokenId,newOrder)=>{\n        try{\n              const incomingOrder = await commerce.checkout.capture(ckeckoutTokenId,newOrder)\n              setOrder(incomingOrder)\n              refreshCart()\n              console.log('YAAAAAS')\n        }catch(error){\n            setErrorMsg(error.data.error.message)\n        }\n    }\n\n    return (\n        <CartUpdateContext.Provider value={[handleUpdateCartQuantity,handleRemoveFromCart,handleEmptyCart,handleCaptureCheckout]}>\n            <CartUpdateContextCheckout.Provider value={[order,errorMsg]}>\n            {children}\n            </CartUpdateContextCheckout.Provider>\n        </CartUpdateContext.Provider>\n    )\n}\n\nexport default CartUpdateContextProvider\n\n        // <CartUpdateContext.Provider value={[handleUpdateCartQuantity,handleRemoveFromCart,handleEmptyCart,handleCaptureCheckout,order,errorMsg]}>\n","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/Checkout/Checkout.js",["136","137","138","139","140","141","142"],"import { Button, CircularProgress, CssBaseline, Divider, Paper, Step, StepLabel, Stepper, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useCartContext } from \"../../../Context/CartContext\";\nimport { useCartUpdateContext, useCartUpdateContextCheckout } from \"../../../Context/CartUpdateContext\";\nimport { commerce } from \"../../../lib/commerce\";\nimport AddressForm from \"../AddressForm/AddressForm\";\nimport PaymentForm from \"../PaymentForm/PaymentForm\";\nimport useStyles from \"./styles\";\n\nconst steps = [\"Shipping details\", \"Payment details\"];\n\nconst Checkout = () => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [shippingData,setShippingData] = useState({})\n  const [isFinished,setIsFinished] = useState(false)\n  const history = useHistory()\n  const classes = useStyles();\n\n  const [cart, products,setCart] = useCartContext();\n  const [order,errorMsg]=useCartUpdateContextCheckout()\n  const [handleUpdateCartQuantity,handleRemoveFromCart,handleEmptyCart,handleCaptureCheckout] = useCartUpdateContext()\n\n  let Confirmation = () => order.customer ? (\n     <>\n      <div>\n        <Typography variant='h5'>Thank you for your purchase :{order.customer.firstname}  {order.customer.lastname}</Typography>\n        <Divider className={classes.divider}/>\n        <Typography variant='subtitle2'>Order ref: {order.customer_reference}</Typography>\n      </div>\n      <br/>  \n      <Button component={Link} to='/' variant='outlined' type='button'>Back to the main page.</Button>\n    </>\n  ) : isFinished ? (\n    <>\n      <div>\n        <Typography variant='h5'>Thank you for your purchase :{order.customer.firstname}  {order.customer.lastname}</Typography>\n        <Divider className={classes.divider}/>\n      </div>\n      <br/>  \n      <Button component={Link} to='/' variant='contained' color='primary' type='button'>Back to the main page.</Button>\n    </>\n  ) : (\n    <div className={classes.spinner}>\n      <CircularProgress/>\n    </div>\n  );\n\n  if(errorMsg){\n    Confirmation = () => (\n       <>\n    <Typography variant='h5'>Error: {errorMsg}</Typography>\n    <br/>\n    <Button component={Link} variant='contained' color='primary' to='/'>Back to the main page.</Button>\n    </>\n    );\n  }\n\n  const timeout =()=>{\n    setTimeout(()=>{\n      setIsFinished(true)\n    },3000)\n  }\n\n  const Form = () => {\n    return activeStep === 0 ? (\n      <AddressForm checkoutToken={checkoutToken} next={next} nextStep={nextStep} shippingData={shippingData} />\n    ) : (\n      <PaymentForm  shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep}  backStep={backStep} handleCaptureCheckout={handleCaptureCheckout} timeout={timeout}/> \n    );\n  };\n\n  useEffect(() => {\n    const generateToken = async () => {\n      try {\n        const token = await commerce.checkout.generateToken(cart.id, {\n          type: \"cart\",\n        });\n        console.log(token,'token success');\n        setCheckoutToken(token);\n      } catch (error) {\n        history.push('/')\n      }\n    }\n    generateToken();\n  }, [cart]);\n\n  const nextStep = ()=>{\n    setActiveStep((prevStep)=>prevStep+1)\n    console.log(activeStep)\n  }\n  const backStep = ()=>(setActiveStep((prevStep)=>prevStep-1))\n\n  \n  const next  = (data)=>{\n    setShippingData(data);\n    nextStep()\n  }\n  const prStep = ()=>{\n    backStep()\n  }\n\n  return (\n    <>\n    <CssBaseline/>\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper elevation={3} className={classes.paper}>\n          <Typography variant=\"h4\" align=\"center\">\n            Checkout\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((step) => (\n              <Step key={step}>\n                <StepLabel color=\"primary\">{step}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? <Confirmation /> : <Form />}\n        </Paper>\n      </main>\n    </>\n  );\n};\n\nexport default Checkout;\n","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/AddressForm/AddressForm.js",["143","144"],"import {\n    Button,\n    Grid,\n    InputLabel,\n    MenuItem,\n    Select,\n    Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { NavLink } from \"react-router-dom\";\nimport { commerce } from \"../../../lib/commerce\";\nimport FormInput from \"../TextField/TextField\";\nimport useStyles from './styles'\n\nconst AddressForm = ({ checkoutToken ,next}) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState(\"\");\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState(\"\");\n    const methods = useForm();\n\n    const classes = useStyles();\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })); // obj => array of arrays => array of objects\n\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })); // obj => array of arrays => array of objects\n\n    const options = shippingOptions.map((shippingOption) => ({ id: shippingOption.id, label: `${shippingOption.description} - (${shippingOption.price.formatted_with_symbol})` }))\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n\n\n        const response = await commerce.services.localeListShippingCountries(\n            checkoutTokenId\n        );\n        setShippingCountries(response.countries);\n        setShippingCountry(Object.keys(response.countries)[0])\n    };\n    const fetchShippingSubdivisions = async (countryCode) => {\n        const response = await commerce.services.localeListSubdivisions(\n            countryCode\n        );\n        setShippingSubdivisions(response.subdivisions);\n        setShippingSubdivision(Object.keys(response.subdivisions)[0])\n    };\n    const fetchShippingOptions = async (checkoutTokenId, country, region) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\n\n        setShippingOptions(options);\n\n        if (options.length) setShippingOption(options[0].id)\n\n    };\n\n\n    useEffect(() => {\n        if (checkoutToken) fetchShippingCountries(checkoutToken.id);\n\n    }, []);\n\n    useEffect(() => {\n        if (shippingCountry) fetchShippingSubdivisions(shippingCountry)\n    }, [shippingCountry])\n\n    useEffect(() => {\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision)\n    }, [shippingSubdivision])\n\n    const handleNext =(data)=>{\n        next({...data,shippingCountry,shippingSubdivision,shippingOption})\n    }\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom >\n                Shipping address\n      </Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit(handleNext)}>\n                    <Grid container spacing={3}>\n                        <FormInput  name=\"firstName\" label={\"First name\"} />\n                        <FormInput name=\"lastName\" label={\"Last name\"}  />\n                        <FormInput name=\"address1\" label={\"Address\"}  />\n                        <FormInput name=\"email\" label={\"Email\"}  />\n                        <FormInput name=\"city\" label={\"City\"}  />\n                        <FormInput name=\"zip\" label={\"ZIP\"}  />\n\n                        <Grid item xs={12} sm={12}>\n                            <InputLabel >Shipping Country</InputLabel>\n                            <Select\n                                value={shippingCountry}\n                                fullWidth\n                                onChange={(e) => setShippingCountry(e.target.value)}\n                            >\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>\n                                        {country.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Select Region</InputLabel>\n                            <Select\n                                value={shippingSubdivision}\n                                fullWidth\n                                onChange={(e) => setShippingSubdivision(e.target.value)}\n                            >\n                                {subdivisions.map((city) => (\n                                    <MenuItem key={city.id} value={city.id}>\n                                        {city.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Option</InputLabel>\n                            <Select\n                                value={shippingOption}\n                                fullWidth\n                                onChange={(e) => setShippingOption(e.target.value)}\n                            >\n                                {options.map((options) => (\n                                    <MenuItem key={options.id} value={options.id}>\n                                        {options.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <div className={classes.btnWrapper}>\n                        <Button component={NavLink} to={'/cart'} className={classes.checkoutButton} variant='outlined' color='secondary'>Back</Button>\n                        <Button type='submit' className={classes.checkoutButton} variant='contained' color='secondary'>Next</Button>\n\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    );\n};\n\nexport default AddressForm;\n","/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/PaymentForm/PaymentForm.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/TextField/TextField.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/AddressForm/styles.js",[],"/Users/alex/Desktop/shop/online-shot/src/components/CheckoutForm/PaymentForm/Review/Review.js",["145","146"],"import { Button, List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Review = ({ checkoutToken,nextStep}) => {\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Summary\n      </Typography>\n      <List disablePadding>\n        {checkoutToken.live.line_items.map((product) => (\n          <ListItem style={{ padding: \"10px 0px\" }} key={product.name}>\n            <ListItemText\n              primary={product.name}\n              secondary={`Quantity : ${product.quantity}`}\n            ></ListItemText>\n            <Typography variant=\"body2\">\n              {product.line_total.formatted_with_symbol}\n            </Typography>\n          </ListItem>\n        ))}\n        <ListItem style={{ padding: \"10px 0px\" }}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\n            {checkoutToken.live.subtotal.formatted_with_symbol}\n          </Typography>\n        </ListItem>\n      </List>\n\n    </>\n  );\n};\n\nexport default Review;\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":15},{"ruleId":"151","severity":1,"message":"155","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":19},{"ruleId":"151","severity":1,"message":"156","line":2,"column":21,"nodeType":"153","messageId":"154","endLine":2,"endColumn":29},{"ruleId":"151","severity":1,"message":"157","line":14,"column":10,"nodeType":"153","messageId":"154","endLine":14,"endColumn":14},{"ruleId":"151","severity":1,"message":"158","line":2,"column":3,"nodeType":"153","messageId":"154","endLine":2,"endColumn":7},{"ruleId":"151","severity":1,"message":"159","line":19,"column":10,"nodeType":"153","messageId":"154","endLine":19,"endColumn":23},{"ruleId":"151","severity":1,"message":"160","line":19,"column":25,"nodeType":"153","messageId":"154","endLine":19,"endColumn":34},{"ruleId":"151","severity":1,"message":"156","line":10,"column":17,"nodeType":"153","messageId":"154","endLine":10,"endColumn":25},{"ruleId":"151","severity":1,"message":"161","line":16,"column":8,"nodeType":"153","messageId":"154","endLine":16,"endColumn":22},{"ruleId":"151","severity":1,"message":"162","line":26,"column":16,"nodeType":"153","messageId":"154","endLine":26,"endColumn":24},{"ruleId":"151","severity":1,"message":"163","line":13,"column":8,"nodeType":"153","messageId":"154","endLine":13,"endColumn":33},{"ruleId":"151","severity":1,"message":"162","line":21,"column":16,"nodeType":"153","messageId":"154","endLine":21,"endColumn":24},{"ruleId":"151","severity":1,"message":"164","line":21,"column":26,"nodeType":"153","messageId":"154","endLine":21,"endColumn":33},{"ruleId":"151","severity":1,"message":"165","line":26,"column":5,"nodeType":"153","messageId":"154","endLine":26,"endColumn":26},{"ruleId":"151","severity":1,"message":"158","line":1,"column":18,"nodeType":"153","messageId":"154","endLine":1,"endColumn":22},{"ruleId":"151","severity":1,"message":"152","line":1,"column":61,"nodeType":"153","messageId":"154","endLine":1,"endColumn":66},{"ruleId":"151","severity":1,"message":"166","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":11},{"ruleId":"151","severity":1,"message":"157","line":18,"column":12,"nodeType":"153","messageId":"154","endLine":18,"endColumn":16},{"ruleId":"151","severity":1,"message":"162","line":18,"column":18,"nodeType":"153","messageId":"154","endLine":18,"endColumn":26},{"ruleId":"151","severity":1,"message":"162","line":21,"column":16,"nodeType":"153","messageId":"154","endLine":21,"endColumn":24},{"ruleId":"151","severity":1,"message":"164","line":21,"column":25,"nodeType":"153","messageId":"154","endLine":21,"endColumn":32},{"ruleId":"151","severity":1,"message":"167","line":23,"column":10,"nodeType":"153","messageId":"154","endLine":23,"endColumn":34},{"ruleId":"151","severity":1,"message":"168","line":23,"column":35,"nodeType":"153","messageId":"154","endLine":23,"endColumn":55},{"ruleId":"151","severity":1,"message":"169","line":23,"column":56,"nodeType":"153","messageId":"154","endLine":23,"endColumn":71},{"ruleId":"170","severity":1,"message":"171","line":87,"column":6,"nodeType":"172","endLine":87,"endColumn":12,"suggestions":"173"},{"ruleId":"151","severity":1,"message":"174","line":100,"column":9,"nodeType":"153","messageId":"154","endLine":100,"endColumn":15},{"ruleId":"170","severity":1,"message":"175","line":62,"column":8,"nodeType":"172","endLine":62,"endColumn":10,"suggestions":"176"},{"ruleId":"170","severity":1,"message":"177","line":70,"column":8,"nodeType":"172","endLine":70,"endColumn":29,"suggestions":"178"},{"ruleId":"151","severity":1,"message":"179","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":16},{"ruleId":"151","severity":1,"message":"180","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":17},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'cart' is assigned a value but never used.","'Card' is defined but never used.","'fetchProducts' is assigned a value but never used.","'fetchCart' is assigned a value but never used.","'DarkModeToggle' is defined but never used.","'products' is assigned a value but never used.","'CartUpdateContextProvider' is defined but never used.","'setCart' is assigned a value but never used.","'handleCaptureCheckout' is assigned a value but never used.","'red' is defined but never used.","'handleUpdateCartQuantity' is assigned a value but never used.","'handleRemoveFromCart' is assigned a value but never used.","'handleEmptyCart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["183"],"'prStep' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkoutToken'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["185"],"'Button' is defined but never used.","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [cart, history]",{"range":"192","text":"193"},"Update the dependencies array to be: [checkoutToken]",{"range":"194","text":"195"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"196","text":"197"},[3173,3179],"[cart, history]",[2419,2421],"[checkoutToken]",[2685,2706],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]